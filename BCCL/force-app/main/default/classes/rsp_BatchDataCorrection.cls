// THIS CLASS IS USED FOR DATA CORRECTION / DEV PURPOSE ONLY
// THIS CLASS IS NOT TO USE FOR IMPLEMENTATION

global class rsp_BatchDataCorrection implements Database.Batchable<sObject> , Schedulable
{
    global integer intCount = 200;
    global string strEvent = 'DO_NOT_UPDATE';
    global string strUpdateOppOwner = 'DO_NOT_UPDATE';
    
    global boolean strSendEmail = false;
    global boolean strRunPrcessed = false;
    public decimal strUpdatedRecords;
    public decimal strErrorLogs;
    
    global rsp_BatchDataCorrection (integer intLimitCount, string strEvnt, boolean strEmail, boolean runOverPreviousRec, string UpdateOppOwner)
    {
        strUpdatedRecords = 0;
        strErrorLogs = 0;
        
        if(intLimitCount != null && intLimitCount > 0)
            intCount = intLimitCount;
        
        if(!String.isBlank(strEvnt))
            strEvent = strEvnt;
        
        if(strEmail != null)
            strSendEmail = strEmail;
            
        if(runOverPreviousRec != null)
            strRunPrcessed = runOverPreviousRec;
            
        if(!String.isBlank(UpdateOppOwner))
            strUpdateOppOwner = UpdateOppOwner;
        
    }
    global void execute(SchedulableContext sc)
    {
        if(test.isrunningtest())
        dummymethod();
    }
    
    global Database.QueryLocator start(Database.BatchableContext BC)     
    {        
        string strQuery;
        
        string strCLSF = 'CLSF';
        
        if(strRunPrcessed)
            strQuery = 'select id, createddate, lastmodifieddate from opportunity where rsp_Is_Direct_Order_Opportunity__c = true AND DEV_Opportunity_Ach_Sync_Processed__c = false AND DEV_Geography_Updated_on_10_02__c = false AND rsp_Is_Transferred_Opportunity__c = false AND Vertical__c != null AND Vertical__r.rsp_Vertical_Short_Code__c= \'CLSF\' limit '+intCount ;
        else
            strQuery = 'select id, createddate, lastmodifieddate from opportunity where rsp_Is_Direct_Order_Opportunity__c = true AND DEV_Opportunity_Ach_Sync_Processed__c = false AND DEV_Opp_Processed_without_change__c = false AND rsp_Is_Transferred_Opportunity__c = false limit '+intCount ;
        
        return Database.getQueryLocator(strQuery);
    }
    
    global void execute(Database.BatchableContext BC, List<opportunity > lstOpp) 
    {   
        if(test.isrunningtest()) 
        dummymethod();
        
        set<id> setOppId = new set<id>();
        list<rsp_Error_Log__c> lstLog = new list<rsp_Error_Log__c>();
        list<opportunity> lstOppToUpdate = new list<opportunity>();
        map<id,set<id>> mapOppToAssignToUser = new map<id,set<id>>();
        map<id,set<id>> mapOppToRole = new map<id,set<id>>();
        map<id,id> mapRoleToUser = new map<id,id>();
        
        for(opportunity objOpp : lstOpp)
            setOppId.add(objOpp.id);           
        
        Map<id, Opportunity>  mapOppData = new map<id, Opportunity>([Select id,rsp_Role__c,Vertical__c, Vertical__r.rsp_Vertical_Short_Code__c ,DEV_Geography_Updated_on_10_02__c, rsp_Role__r.rsp_Hierarchy_Type__c,ownerId,rsp_Sales_Org__c,DEV_Opportunity_Ach_Sync_Processed__c, (select id,rsp_User__c,rsp_Role__c,rsp_Role__r.rsp_Hierarchy_Type__c, rsp_Team_Member_Role__c,rsp_Role__r.rsp_Current_User__c, rsp_Role__r.rsp_Current_User__r.isActive, rsp_Role__r.rsp_Geography__c,rsp_Role__r.rsp_Profile__r.rsp_Profile_Initials__c, ownerId,rsp_Opportunity__c  from Achievements__r where rsp_Opportunity__c in:setOppId AND rsp_Credit_Split_Status__c = 'Assigned' AND rsp_Role__c != null ORDER BY CreatedDate ASC) from Opportunity where id in: setOppId]);
        map<id,id> mapRoleToGEOGRAHYid = new map<id,id>();
        
        for(Id objOppId : mapOppData.keyset())
        {
            Opportunity objOppToUpdate = mapOppData.get(objOppId);
            
            for(rsp_Achievement__c objAch : objOppToUpdate.Achievements__r)
            {
                //if(objAch.rsp_User__c != null && objAch.rsp_Team_Member_Role__c != null && objAch.rsp_Team_Member_Role__r.rsp_Profile__r.rsp_Profile_Initials__c == 'STM' && objAch.rsp_Role__c != null && objOppToUpdate.rsp_Role__c != null && objAch.rsp_Role__r.rsp_Hierarchy_Type__c == objOppToUpdate.rsp_Role__r.rsp_Hierarchy_Type__c)
                if(objAch.rsp_User__c != null && objAch.rsp_Role__c != null && objAch.rsp_Role__r.rsp_Profile__r.rsp_Profile_Initials__c == 'STM' && objAch.rsp_Role__c != null && objOppToUpdate.rsp_Role__c != null && objAch.rsp_Role__r.rsp_Hierarchy_Type__c == objOppToUpdate.rsp_Role__r.rsp_Hierarchy_Type__c)
                {
                    if(!mapOppToAssignToUser.containskey(objAch.rsp_Opportunity__c))
                        mapOppToAssignToUser.put(objAch.rsp_Opportunity__c , new set<id>());
                    mapOppToAssignToUser.get(objAch.rsp_Opportunity__c).add(objAch.rsp_User__c);
                    
                    if(!mapOppToRole.containskey(objAch.rsp_Opportunity__c))
                        mapOppToRole.put(objAch.rsp_Opportunity__c, new set<id>());
                    mapOppToRole.get(objAch.rsp_Opportunity__c).add(objAch.rsp_Role__c); 
                    //mapOppToRole.get(objAch.rsp_Opportunity__c).add(objAch.rsp_Team_Member_Role__c); 
                    
                    if(objAch.rsp_Role__r.rsp_Current_User__c != null && objAch.rsp_Role__r.rsp_Current_User__r.isActive == true)
                        mapRoleToUser.put(objAch.rsp_Role__c, objAch.rsp_Role__r.rsp_Current_User__c);
                    
                    mapRoleToGEOGRAHYid.put(objAch.rsp_Role__c, objAch.rsp_Role__r.rsp_Geography__c);
                }
            }
            
            if(mapOppToAssignToUser.containskey(objOppId) && mapOppToAssignToUser.get(objOppId).size() == 1 && mapOppToRole.containskey(objOppId) && mapOppToRole.get(objOppId).size() == 1)
            {
                if(strUpdateOppOwner == 'UPDATE_OPPORTUNITY_OWNER'){
                    for(id strOwnerId : mapOppToAssignToUser.get(objOppId))
                        objOppToUpdate.ownerId = strOwnerId ;
                }
                
                for(id strRoleId : mapOppToRole.get(objOppId))
                {
                    if(strUpdateOppOwner == 'UPDATE_OPPORTUNITY_OWNER')
                    objOppToUpdate.rsp_Role__c = strRoleId ;
                    objOppToUpdate.rsp_Sales_Org__c = mapRoleToGEOGRAHYid.get(strRoleId);
                }
                
                if(objOppToUpdate.rsp_Sales_Org__c != null){
                    objOppToUpdate.DEV_Opportunity_Ach_Sync_Processed__c = true;
                    objOppToUpdate.DEV_Geography_Updated_on_10_02__c  = true;
                    lstOppToUpdate.add(objOppToUpdate);
                }
            }
            else if(objOppToUpdate.Vertical__c != null && objOppToUpdate.Vertical__r.rsp_Vertical_Short_Code__c == 'CLSF' && ((mapOppToAssignToUser.containskey(objOppId) && mapOppToAssignToUser.get(objOppId).size() > 1) || (mapOppToRole.containskey(objOppId) && mapOppToRole.get(objOppId).size() > 1)))
            {
                if(strUpdateOppOwner == 'UPDATE_OPPORTUNITY_OWNER'){
                for(id strOwnerId : mapOppToAssignToUser.get(objOppId))
                    objOppToUpdate.ownerId = strOwnerId ;
                }
                
                for(id strRoleId : mapOppToRole.get(objOppId))
                {
                    if(strUpdateOppOwner == 'UPDATE_OPPORTUNITY_OWNER')
                    objOppToUpdate.rsp_Role__c = strRoleId ;
                    objOppToUpdate.rsp_Sales_Org__c = mapRoleToGEOGRAHYid.get(strRoleId);
                }
                
                if(objOppToUpdate.rsp_Sales_Org__c != null){
                    objOppToUpdate.DEV_Opportunity_Ach_Sync_Processed__c = true;
                    objOppToUpdate.DEV_Geography_Updated_on_10_02__c  = true;
                    lstOppToUpdate.add(objOppToUpdate);
                }
            }
            else
            {
                objOppToUpdate.DEV_Opp_Processed_without_change__c = true;
                objOppToUpdate.DEV_Geography_Updated_on_10_02__c  = true;
                lstOppToUpdate.add(objOppToUpdate);
            }
            
            if(objOppToUpdate.Vertical__c != null && objOppToUpdate.Vertical__r.rsp_Vertical_Short_Code__c != 'CLSF' && ((mapOppToAssignToUser.containskey(objOppId) && mapOppToAssignToUser.get(objOppId).size() > 1) || (mapOppToRole.containskey(objOppId) && mapOppToRole.get(objOppId).size() > 1)))
            {
                String strMsg = 'Achievement for Opportunity Id : '+objOppId+' is assigned to more than 1 STM Role OR User. Unable to identify Correct One.'+'\n';
                strMsg = strMsg + 'user ids: '+'\n'+mapOppToAssignToUser.get(objOppId);
                strMsg = strMsg + 'Role ids: '+'\n'+mapOppToRole.get(objOppId);
                
                rsp_Error_Log__c objLog = new rsp_Error_Log__c();
                objLog.rsp_Error_Stack_Trace__c = strMsg;
                objLog.rsp_Module_Name__c = objOppId;
                objLog.rsp_Error_Cause__c = 'ERROR: Opportunity Achievement Ownership sync Data Correction : More Than 1 STM Assignment Found. ';
                lstLog.add(objLog);
            }
            system.debug('=== objOppToUpdate==='+objOppToUpdate);
            system.debug('=== lstOppToUpdate ==='+lstOppToUpdate);
        }
        
        if(lstOppToUpdate.size() > 0 && strEvent == 'EXECUTE_UPDATE_OPPORTUNITY')
        {
            // DML statement
            Database.SaveResult[] srList = Database.Update(lstOppToUpdate, false);
            
            integer i = 0;
            for (Database.SaveResult sr : srList) 
            {
                if (sr.isSuccess()) 
                {
                    strUpdatedRecords = strUpdatedRecords +1;
                    System.debug('Successfully Update Opportunity. Opportunity ID: ' + sr.getId());
                }
                else 
                {
                    
                    String strMsg = '';
                    for(Database.Error err : sr.getErrors()) 
                    {
                        strMsg = strMsg + '\n'+'\n';                
                        strMsg = strMsg + 'The following error has occurred.'+'\n'+'Opportnity Id: '+srList.get(i).id+'\n';
                        strMsg = strMsg + err.getStatusCode() + ': ' + err.getMessage()+'\n';
                        strMsg = strMsg + 'Opportunity fields that affected this error: ' + err.getFields()+'\n';               
                    }
                    
                    rsp_Error_Log__c objLog = new rsp_Error_Log__c();
                    objLog.rsp_Error_Stack_Trace__c = strMsg;
                    objLog.rsp_Error_Cause__c = 'ERROR: Opportunity Achievement Ownership sync Data Correction : Error While Updating..';
                    objLog.rsp_Module_Name__c = srList.get(i).id;
                    lstLog.add(objLog);
                }
                i++;
            }
        }
        
        strUpdatedRecords = strUpdatedRecords + 1;
        strErrorLogs = 5;
        strErrorLogs = lstlog.size();
        System.debug('strUpdatedRecords : ' + strUpdatedRecords );
        System.debug('strErrorLogs : ' + strErrorLogs );
        
        if(lstLog.size() > 0)
            insert lstLog;
    }
   
    
    global void finish(Database.BatchableContext BC) 
    {        
        if(strSendEmail == true)
        {
            String str = 'Dear user'+'\n';
            str = str + 'Opportunity Achievement Ownership sync Data Correction Btch has been completed. '+'\n';
            str = str + 'Opportunity Updated  : '+strUpdatedRecords +'\n';
            str = str + 'Error Logs generated : '+strErrorLogs +'\n';
            
            list<string> lstToIds = System.Label.DEV_NOTIFY_BATCH_COMPLETION_STATUS.split(',');
            
            if(lstToIds.size() > 0)
            {
                Messaging.SingleEmailMessage semail = new Messaging.SingleEmailMessage();            
                //String[] sendingTo = new String[]{'himanshu.jain3@cognizant.com'}; 
                semail.setToAddresses(lstToIds); 
                //String[] sendingTocAdd = new String[]{'shubham.awasthi4@cognizant.com'}; 
                //semail.setCcAddresses(sendingTocAdd); 
                semail.setSubject('BCCL Production Opportunity Achievment attribute Sync batch Status update'); 
                semail.setPlainTextBody(str); 
                Messaging.sendEmail(new Messaging.SingleEmailMessage[] {semail});
            }
            
        }
    }
    
    public static void dummymethod()
    {
        integer i = 0;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
    }
}