global class rsp_BatchTargetDataCorrection implements Database.Batchable<sObject> , Schedulable
{

    global String Query;
    global String roleId;
    global String achId;
    global decimal numberToInsert = 0;
    global decimal numberToUpdate = 0;
    global String strMessage = '';
    
    global rsp_BatchTargetDataCorrection (Id strRoleId, Id strAchId)
    {
        roleId = strRoleId;
        achId = strAchId;
    }
    global void execute(SchedulableContext sc)
    {
        if(test.isrunningtest())
        dummymethod();
    }
    
    global Database.QueryLocator start(Database.BatchableContext BC)     
    {        
        if(achId != null)
        return Database.getQueryLocator([select id,rsp_Account__c,rsp_Order__r.rsp2_Sales_Office_Geo_Code__c,rsp_Achievement_Date__c,rsp_Achievement_External_Id__c,rsp_Achievement_Value__c,rsp_Ad_Position__c,rsp_User__c,AT_Count__c,BCC__c,rsp_Design_type__c,rsp_Is_Shared__c,rsp_Opportunity__c,DEV_Opportunity_is_Direct_Opportunity__c,rsp_Order__c,rsp_Order_Line_Item__c,rsp_Role__c,rsp_Credit_Split_Status__c,TCC__c,rsp_Team_Member_Role__c,DEV_To_be_deleted__c from rsp_Achievement__c where DEV_Opportunity_is_Direct_Opportunity__c = true AND id =: achId AND rsp_Opportunity__r.Vertical__r.rsp_Vertical_Short_Code__c = 'CLSF'  AND rsp_Order__r.rsp2_Sales_Office_Geo_Code__c != null AND BCC__c != null AND rsp_Valid_Achievement__c = true AND DEV_Is_Split_Achievement__c = false AND DEV_To_be_deleted__c = false]);
        else if(roleId != null)
        return Database.getQueryLocator([select id,rsp_Account__c,rsp_Order__r.rsp2_Sales_Office_Geo_Code__c,rsp_Achievement_Date__c,rsp_Achievement_External_Id__c,rsp_Achievement_Value__c,rsp_Ad_Position__c,rsp_User__c,AT_Count__c,BCC__c,rsp_Design_type__c,rsp_Is_Shared__c,rsp_Opportunity__c,DEV_Opportunity_is_Direct_Opportunity__c,rsp_Order__c,rsp_Order_Line_Item__c,rsp_Role__c,rsp_Credit_Split_Status__c,TCC__c,rsp_Team_Member_Role__c,DEV_To_be_deleted__c from rsp_Achievement__c where DEV_Opportunity_is_Direct_Opportunity__c = true AND rsp_Role__c =: roleId AND rsp_Opportunity__r.Vertical__r.rsp_Vertical_Short_Code__c = 'CLSF'  AND rsp_Order__r.rsp2_Sales_Office_Geo_Code__c != null AND BCC__c != null AND rsp_Valid_Achievement__c = true AND DEV_Is_Split_Achievement__c = false AND DEV_To_be_deleted__c = false AND (rsp_Credit_Split_Status__c = 'Open' OR rsp_Credit_Split_Status__c = 'Assigned')]);
        else
        return Database.getQueryLocator([select id,rsp_Account__c,rsp_Order__r.rsp2_Sales_Office_Geo_Code__c,rsp_Achievement_Date__c,rsp_Achievement_External_Id__c,rsp_Achievement_Value__c,rsp_Ad_Position__c,rsp_User__c,AT_Count__c,BCC__c,rsp_Design_type__c,rsp_Is_Shared__c,rsp_Opportunity__c,DEV_Opportunity_is_Direct_Opportunity__c,rsp_Order__c,rsp_Order_Line_Item__c,rsp_Role__c,rsp_Credit_Split_Status__c,TCC__c,rsp_Team_Member_Role__c,DEV_To_be_deleted__c from rsp_Achievement__c where DEV_Opportunity_is_Direct_Opportunity__c = true AND rsp_Role__r.rsp_Profile__r.rsp_Code__c = 'BVH' AND rsp_Opportunity__r.Vertical__r.rsp_Vertical_Short_Code__c = 'CLSF'  AND rsp_Order__r.rsp2_Sales_Office_Geo_Code__c != null AND BCC__c != null AND rsp_Valid_Achievement__c = true AND DEV_Is_Split_Achievement__c = false AND DEV_To_be_deleted__c = false AND (rsp_Credit_Split_Status__c = 'Open' OR rsp_Credit_Split_Status__c = 'Assigned')]);
    }
    
    global void execute(Database.BatchableContext BC, List<rsp_Achievement__c> lstAch) 
    {   
        if(test.isrunningtest()) 
        dummymethod();
        
        //strMessage = strMessage + 'Total '+lstAch.size()+ ' Achievement Queried.';
        system.debug('==== lstAch ==== '+lstAch.size());

        set<string> setSalesoffice = new set<string>();
        set<string> setVerticalcategory_BCC = new set<string>();
        
        for(rsp_Achievement__c objAch : lstAch)
        {   
            setSalesoffice.add(objAch.rsp_Order__r.rsp2_Sales_Office_Geo_Code__c);
            setVerticalcategory_BCC.add(objAch.BCC__c);
            
            //strMessage = strMessage + '\n'+' Achievement Id: '+objAch.id+'\n';
            //strMessage = strMessage + ' setSalesoffice : '+objAch.rsp_Order__r.rsp2_Sales_Office_Geo_Code__c+'\n';
            //strMessage = strMessage + ' setVerticalcategory_BCC: '+objAch.BCC__c+'\n';
        }
        
        system.debug('==== setSalesoffice ==== '+setSalesoffice.size());
        system.debug('==== setSalesoffice ==== '+setSalesoffice);
        system.debug('==== setVerticalcategory_BCC ==== '+setVerticalcategory_BCC.size());
        system.debug('==== setVerticalcategory_BCC ==== '+setVerticalcategory_BCC);
        
        
        
        map<string, list<rsp_role__c>> mapClassifiedCategoryVsSTMRoles = new map<string, list<rsp_role__c>>();
        
        if(setSalesoffice.size() > 0 && setVerticalcategory_BCC.size() > 0)
        {
            list<rsp_Role__c> lstRole = [SELECT id, Name, rsp_Vertical_Category__c, rsp_Vertical_Category__r.rsp_Category_Code__c,
                                                rsp_Profile__c, rsp_Profile__r.Name, rsp_Vertical__c,  rsp_Vertical__r.rsp_Vertical_Short_Code__c,
                                                rsp_Geo_Code__c , rsp_Current_User__c,
                                                (select id, rsp_End_date__c, rsp_start_date__c, rsp_User__c from Role_Assignment__r)
                                                FROM rsp_Role__c 
                                                WHERE DEV_is_STM__c = true
                                                AND rsp_profile__c != NULL
                                                AND rsp_Profile__r.Name =: rsp_ResponseConstants.SALES_TEAM_MEMBER 
                                                AND rsp_Vertical_Category__c != null
                                                AND rsp_Vertical_Category__r.rsp_Category_Code__c in: setVerticalcategory_BCC 
                                                AND rsp_Vertical__c != null 
                                                AND rsp_Vertical__r.rsp_Vertical_Short_Code__c = 'CLSF'
                                                AND rsp_Geography__r.rsp_Geo_Code__c in: setSalesoffice];
            system.debug('==== lstRole ==== '+lstRole.size());
            for(rsp_Role__c objRole : lstRole)
            {
                string STMROLEkey = rsp_ResponseConstants.SALES_TEAM_MEMBER +'_'+objRole.rsp_Geo_Code__c+'_'+ objRole.rsp_Vertical_Category__r.rsp_Category_Code__c;
                system.debug('==== STMROLEkey ==== '+STMROLEkey);
                if(!mapClassifiedCategoryVsSTMRoles.containskey(STMROLEkey))
                    mapClassifiedCategoryVsSTMRoles.put(STMROLEkey, new list<rsp_Role__c>());
                 
                mapClassifiedCategoryVsSTMRoles.get(STMROLEkey).add(objRole);
                
                //strMessage = strMessage + 'STM Role Queried is : '+objRole.id+'\n';
            }
        }
        system.debug('==== mapClassifiedCategoryVsSTMRoles ==== '+mapClassifiedCategoryVsSTMRoles.keyset().size());
        
        list<rsp_Achievement__c> recordsToInsert = new list<rsp_Achievement__c>();
        map<id,rsp_Achievement__c> mapRecordtoupdate = new map<id, rsp_Achievement__c>();
        
        for(rsp_Achievement__c objAch : lstAch)
        {   
            integer STMCount = 0;
            string STMROLEkey = rsp_ResponseConstants.SALES_TEAM_MEMBER +'_'+objAch.rsp_Order__r.rsp2_Sales_Office_Geo_Code__c+'_'+ objAch.BCC__c;
            system.debug('==== STMROLEkey ==== '+STMROLEkey);
            
            //strMessage = strMessage + 'STM Role for Achievemnt should be : '+STMROLEkey +'\n';
            //strMessage = strMessage + 'Queried role contain Achievment Role expected : '+mapClassifiedCategoryVsSTMRoles.containskey(STMROLEkey)+'\n';
            
            if(mapClassifiedCategoryVsSTMRoles.containskey(STMROLEkey))
            {
                for(rsp_Role__c objRole : mapClassifiedCategoryVsSTMRoles.get(STMROLEkey))
                {
                    for(rsp_Role_Assignment__c objRA : objRole.Role_Assignment__r)
                    {
                        if(objAch.rsp_Achievement_Date__c >= objRA.rsp_start_date__c && ((objRA.rsp_End_date__c != null && objAch.rsp_Achievement_Date__c <= objRA.rsp_End_date__c) || objRA.rsp_End_date__c == null))
                        {
                            STMCount = STMCount+1;
                            break;
                        }
                    }
                }
                system.debug('==== STMCount ==== '+STMCount);
                //strMessage = strMessage + 'Total number of STM identified to be splitted on the basis of Role assignment duration and Achievement date : '+STMCount+'\n';
            }
            //integer STMCount = mapClassifiedCategoryVsSTMRoles.containskey(STMROLEkey) ? mapClassifiedCategoryVsSTMRoles.get(STMROLEkey).size() : 0 ;
            
            
            if(STMCount > 0)
            {
                decimal achivementValue = objAch.rsp_Achievement_Value__c != null ? objAch.rsp_Achievement_Value__c / STMCount : 0 ;
                system.debug('==== achivementValue ==== '+achivementValue);
                //strMessage = strMessage + 'Achievement Value to split : '+achivementValue+'\n';
                
                integer count = 0;
                for(rsp_Role__c objRole : mapClassifiedCategoryVsSTMRoles.get(STMROLEkey))
                {
                    //strMessage = strMessage + 'Analyzing Roles identified ...'+objRole.id+'\n';
                    for(rsp_Role_Assignment__c objRA : objRole.Role_Assignment__r)
                    {
                        //strMessage = strMessage + 'Analyzing Role Assignment Duration for role identified ...:'+objRole.id+'\n';
                        //strMessage = strMessage + 'Achievement Date: '+objAch.rsp_Achievement_Date__c+'\n';
                        //strMessage = strMessage + 'Role Assignment Start Date :'+objRA.rsp_start_date__c+'\n';
                        //strMessage = strMessage + 'Role Assignment End Date '+objRA.rsp_End_date__c+'\n';
                        
                        if(objAch.rsp_Achievement_Date__c >= objRA.rsp_start_date__c && ((objRA.rsp_End_date__c != null && objAch.rsp_Achievement_Date__c <= objRA.rsp_End_date__c) || objRA.rsp_End_date__c == null))
                        {
                            count = count + 1;
                            rsp_Achievement__c achievementSTM = new rsp_Achievement__c();
                            achievementSTM.rsp_User__c = objRA.rsp_User__c ; //objRole.rsp_Current_User__c;            
                            achievementSTM.rsp_Role__c = objRole.Id;
                            achievementSTM.rsp_Credit_Split_Status__c = rsp_ResponseConstants.ACHIEVEMENT_ASSIGNED;
                            achievementSTM.rsp_Order__c = objAch.rsp_Order__c;
                            achievementSTM.rsp_Order_Line_Item__c = objAch.rsp_Order_Line_Item__c;
                            achievementSTM.rsp_Opportunity__c = objAch.rsp_Opportunity__c;
                            achievementSTM.rsp_Account__c = objAch.rsp_Account__c;
                            achievementSTM.rsp_Achievement_Value__c = achivementValue;
                            achievementSTM.rsp_Achievement_Date__c = objAch.rsp_Achievement_Date__c;
                            achievementSTM.rsp_Achievement_External_Id__c = objAch.id+'_'+count;
                            achievementSTM.DEV_Is_Split_Achievement__c = true;
                            recordsToInsert.add(achievementSTM);   
                            
                            system.debug('==== achievementSTM ==== '+achievementSTM);
                            
                            //strMessage = strMessage + 'New Achievemnt to be inserted : '+achievementSTM+'\n';
                            
                            objAch.DEV_To_be_deleted__c = true;
                            objAch.rsp_Credit_Split_Status__c= 'Cancelled';                             
                            mapRecordtoupdate.put(objAch.id, objAch);
                            
                            system.debug('==== objAch ==== '+objAch);
                            break;
                        }
                    }
                }
            }   
        }
        
        //strMessage = strMessage + 'All Achievemnt List to be inserted Size : '+recordsToInsert.size()+'\n';
        //strMessage = strMessage + 'All Achievemnt List to be inserted : '+recordsToInsert+'\n';
        
        system.debug('==== Achievemnt recordsToInsert ==== '+recordsToInsert.size());
        system.debug('==== Ahievement mapRecordtoupdate==== '+mapRecordtoupdate.size());
        
        numberToInsert = numberToInsert + recordsToInsert.size();
        numberToUpdate = numberToUpdate + mapRecordtoupdate.size();
        
         
        
            if(recordsToInsert.size() > 0)
                insert recordsToInsert;
            
            if(mapRecordtoupdate.values().size() > 0)
                update mapRecordtoupdate.values();
            strMessage = '';
        if(System.Label.DATCORRECTION_SFDC_SUPPORT == 'UPDATE_DATA')
        {}
        
    }
   
    
    global void finish(Database.BatchableContext BC) 
    {
        
            Messaging.SingleEmailMessage semail = new Messaging.SingleEmailMessage();
            
            String[] sendingTo = new String[]{'himanshu.jain3@cognizant.com'}; 
            semail.setToAddresses(sendingTo); 
            String[] sendingTocAdd = new String[]{'shubham.awasthi4@cognizant.com'}; 
            semail.setCcAddresses(sendingTocAdd); 
            semail.setSubject(numberToInsert +' BVH Achievement Split for classified.'); 
            semail.setPlainTextBody('BVH Achievement Split for classified.'+numberToInsert +'\n'+ 'Ahievement mapRecordtoupdate==== '+numberToUpdate +'\n'+'\n'+strMessage); 
            Messaging.sendEmail(new Messaging.SingleEmailMessage[] {semail});
        if(System.Label.DATCORRECTION_SFDC_SUPPORT == 'DO_NOT_UPDATE_DATA_SEND_EMAIL')
        {}
    }
  
    
    public static void dummymethod()
    {
        integer i = 0;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        
    }
    
}